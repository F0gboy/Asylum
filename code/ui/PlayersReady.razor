@using Sandbox
@using System
@using Sandbox.UI;
@inherits RootPanel

<style>
    .box {
        width: 400px;
        height: 80px;
        background: linear-gradient(135deg, #5a5a5a, #2b2b2b);
        border: 2px solid black;
        border-radius: 10px;
        position: absolute;
        top: 1%;
        left: 50%;
        transform: translateX(-50%);
        color: white;
        font-size: 40px;
        font-family: 'Montserrat', sans-serif;
        display: flex;
        justify-content: center;
        align-items: center;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);
    }
</style>

<root>
    <div class="box">
        <p>
            @text
        </p>
    </div>
</root>


@code {
    private string text = $"Players ready: {MyGame.GetPlayersReady()}/{Game.Clients.Count}";

    [Event("UpdateReady")]
    public void UpdateUi(int playersReady, int playersIngame)
    {
        text = $"Players ready: {playersReady}/{playersIngame}";
        StateHasChanged();

        if (playersReady != playersIngame) return;

        DeleteAsync(2000);
    }

    public async void DeleteAsync(int timer)
    {
        var addText = string.Empty;

        var loopTimes = 8;

        for (int i = 1; i <= loopTimes; i++)
        {
            text = "Doors opening" + addText;
            StateHasChanged();
            await GameTask.Delay(timer / loopTimes);

            if (i % 4 == 0) addText = string.Empty;
            else addText += ".";
        }

        Delete();
    }
}